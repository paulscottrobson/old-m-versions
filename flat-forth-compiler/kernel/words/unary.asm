; *********************************************************************************
; *********************************************************************************
;
;		File:		unary.asm
;		Purpose:	Unary words
;		Created : 	25th October 2018
;		Author:		paul@robsons.org.uk
;
; *********************************************************************************
; *********************************************************************************

; *********************************************************************************
;
;						Simple Adjustments +/- 1 or 2
;
; *********************************************************************************

; @macro 1+
		inc 	hl
; @endm

; @macro 2+
		inc 	hl
		inc 	hl
; @endm

; @macro 1-
		dec 	hl
; @endm

; @macro 2-
		dec 	hl
		dec 	hl
; @endm

; *********************************************************************************
;
;									Left Scalars
;
; *********************************************************************************

; @macro 2*
		add 	hl,hl
; @endm

; @macro 4*
		add 	hl,hl
		add 	hl,hl
; @endm

; @macro 8*
		add 	hl,hl
		add 	hl,hl
		add 	hl,hl
; @endm

; @macro 16*
		add 	hl,hl
		add 	hl,hl
		add 	hl,hl
		add 	hl,hl
; @endm

; @macro 256*
		ld 		h,l
		ld 		l,0
; @endm

; *********************************************************************************
;
;								Arithmetic right Scalars
;
; *********************************************************************************

; @macro 2/
		sra 	h
		rr 		l
; @endm

; @word 4/
		sra 	h
		rr 		l
		sra 	h
		rr 		l
		ret

; @word 8/
		sra 	h
		rr 		l
		sra 	h
		rr 		l
		sra 	h
		rr 		l
		ret

; @word 16/
		sra 	h
		rr 		l
		sra 	h
		rr 		l
		sra 	h
		rr 		l
		ret

; @word 256/
		ld 		h,l
		bit 	7,h
		ld 		h,0
		ret 	z
		dec 	h
		ret

; *********************************************************************************
;
;									0<
;
; *********************************************************************************

; @word 0<
		bit 	7,h
		ld 		hl,0
		ret 	z
		dec 	hl
		ret

; *********************************************************************************
;
;									0=
;
; *********************************************************************************

; @word 0=
		ld 		a,h
		or 		l
		ld 		hl,0
		ret 	nz
		dec 	hl
		ret

; *********************************************************************************
;
;								   abs
;
; *********************************************************************************

; @word abs
		bit 	7,h
		ret 	z 									; return if +ve
													; NOTE: Falls through here.

; *********************************************************************************
;
;								   Negate / 0-
;
; *********************************************************************************

; @word 0-
		ld 		a,h
		cpl
		ld 		h,a
		ld 		a,l
		cpl
		ld		l,a
		inc 	hl
		ret

; *********************************************************************************
;
;								   Binary Not
;
; *********************************************************************************

; @word not
		ld 		a,h
		cpl
		ld 		h,a
		ld 		a,l
		cpl
		ld		l,a
		ret

; *********************************************************************************
;
;								   Byte Swap
;
; *********************************************************************************

; @macro bswap
		ld 		a,l
		ld 		l,h
		ld 		h,a
; @endm