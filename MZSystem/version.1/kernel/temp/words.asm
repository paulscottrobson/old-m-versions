; ***********************************************************************************************
; ***********************************************************************************************
;
;		Name : 		core.asm
;		Purpose : 	Core words
;		Author :	Paul Robson (paul@robsons.org.uk)
;		Created : 	30th September 2018
;
; ***********************************************************************************************
; ***********************************************************************************************

; ***********************************************************************************************
;								, 	Compile a Word
; ***********************************************************************************************

; @@word 		,
mz_define_2c_5f_77_6f_72_64:
		jp 		PAGECompileWord

; ***********************************************************************************************
;								c, 	Compile a Byte
; ***********************************************************************************************

; @@word		c,
mz_define_63_2c_5f_77_6f_72_64:
		ld 		a,l
		jp 		PAGECompileByte

; ***********************************************************************************************
;								i, 	Compile an instruction
; ***********************************************************************************************

; @@word		i,
mz_define_69_2c_5f_77_6f_72_64:
		jp 		PAGECompileInstruction

; ***********************************************************************************************
;								; 	Return from subroutine
; ***********************************************************************************************

; @@macro.nx	;
mz_define_3b_5f_6d_61_63_72_6f_2e_6e_78:
		ld 		a,$C9
		jp 		PAGECompileByte

; ***********************************************************************************************
;								.h  Print A
; ***********************************************************************************************

; @@word 		.h
mz_define_2e_68_5f_77_6f_72_64:
		jp 		DEBUGPrintHL

; ***********************************************************************************************
;									Stop the CPU
; ***********************************************************************************************

; @@word 		halt
mz_define_68_61_6c_74_5f_77_6f_72_64:
		jp 		HaltSystem

; ***********************************************************************************************
;						  Display debug information on bottom line
; ***********************************************************************************************

; @@word 		debug
mz_define_64_65_62_75_67_5f_77_6f_72_64:
		jp 		DebugCode

; ***********************************************************************************************
;								Make the last definition a macro
; ***********************************************************************************************

; @@macro 		macro
mz_define_6d_61_63_72_6f_5f_6d_61_63_72_6f:
		ld 		a,2
__ORLastTypeIDWithA:
		push 	hl
		ld 		l,a
		call 	DICTORLastTypeID
		pop 	hl
		ret

; ***********************************************************************************************
;							Make the last definition compile.only
; ***********************************************************************************************

; @@macro 		compile.only
mz_define_63_6f_6d_70_69_6c_65_2e_6f_6e_6c_79_5f_6d_61_63_72_6f:
		ld 		a,0x40
		jr 		__ORLastTypeIDWithA

; ***********************************************************************************************
;									Or the type ID with A
; ***********************************************************************************************

; @@word 		or.type.id
mz_define_6f_72_2e_74_79_70_65_2e_69_64_5f_77_6f_72_64:
		ld 		a,l
		jr 		__ORLastTypeIDWithA

; *** IMPORTANT *** This is not a macro, it is designed to be used in words that manipulate
; the last definition.

; ***********************************************************************************************
;							   Set cursor position to A
; ***********************************************************************************************

; @@word 		cursor!
mz_define_63_75_72_73_6f_72_21_5f_77_6f_72_64:
		jp 		IOSetCursor

; ***********************************************************************************************
;							  Write B to screen position A
; ***********************************************************************************************

; @@word 		screen!
mz_define_73_63_72_65_65_6e_21_5f_77_6f_72_64:
		ld 		a,e
		jp 		IOWriteCharacter

; ***********************************************************************************************
;							   Clear screen / home cursor
; ***********************************************************************************************

; @@word 		clr.screen
mz_define_63_6c_72_2e_73_63_72_65_65_6e_5f_77_6f_72_64:
		jp	 	IOClearScreen

; ***********************************************************************************************
;								 Scan the keyboard into A
; ***********************************************************************************************

; @@word 		key@
mz_define_6b_65_79_40_5f_77_6f_72_64:
		call 	IOScanKeyboard
		ld 		l,a
		ld 		h,0
		ret

; ***********************************************************************************************
;										Put B*A in A
; ***********************************************************************************************

; @@word 		*
mz_define_2a_5f_77_6f_72_64:
		jp 		Multiply16

; ***********************************************************************************************
;										Put B/A in A
; ***********************************************************************************************

; @@word 		/
mz_define_2f_5f_77_6f_72_64:
		push 	de
		call	DivideMod16
		ex 		de,hl
		pop 	de
		ret

; ***********************************************************************************************
;									Put Modulus of B/A in A
; ***********************************************************************************************

; @@word 		mod
mz_define_6d_6f_64_5f_77_6f_72_64:
		push 	de
		call	DivideMod16
		pop 	de
		ret
